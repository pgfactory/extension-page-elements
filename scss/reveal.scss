/* === Reveal block ==================
 * CSS Variables:
    --pfy-reveal-controller-height: 3em;
    --pfy-reveal-bg: #eef;
    --pfy-reveal-border: 1px dashed blue;
    --pfy-reveal-container-border: 1px dotted red;
    --pfy-reveal-container-padding: 2em;
*/

@import '~/site/plugins/pagefactory/scss/_scss-variables.scss';

$revealControllerHeight: 2em;
$revealArrowSize: 1em;

#pfy .pfy-encapsulated.pfy-default-styling,
.pfy-default-styling {


  .pfy-reveal-controller {
    &,
    &::before {
      vertical-align: middle;
      padding: 0;
      color: inherit;
    }
    &::before {
      position: absolute;
      left: 0;
      top: calc((var(--pfy-reveal-controller-height, #{$revealControllerHeight}) - 1em) / 2 - 2px);
      width: $revealArrowSize;
      height: $revealArrowSize;
      text-align: center;
      margin: 0;
      content: attr(data-icon-closed);
      font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
      font-size: 1em;
      transition: transform 0.3s;
      transform-origin: 50% 50%;
    }
    transform: rotate( 0 );
    &:checked::before {
      content: attr(data-icon-open);
      transform: rotate( 90deg );
    }
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    display: inline-block;
    background-color: transparent;
    position: absolute;
    top: 0;
    left: 0;
    font-size: inherit;
    border: 0;
    cursor: pointer;
    outline: none;
    box-shadow: none;

    //padding: 0.5em 0;

    label:has(:focus-visible) {
      @include _focus;
    }
    input:focus-visible {
      outline: unset !important;
    }
  } // .pfy-reveal-controller

  input.pfy-reveal-controller {
    margin: -1px;
    padding: 0;
    white-space: nowrap;
    border: none!important;
    max-width: 0!important;
    box-shadow: none!important;
  }

  .pfy-reveal-controller-wrapper {
    position: relative;
    background: var(--pfy-reveal-bg);
    border: var(--pfy-reveal-border);
    &.pfy-target-revealed.pfy-target-shadow {
      box-shadow: 0 5px 5px -5px rgb(0 0 0 / 75%);
    }
    label {
      display: block;
      padding-left: calc(#{$revealArrowSize} + 0.5em);
      min-height: var(--pfy-reveal-controller-height, #{$revealControllerHeight});
      padding-top: calc((var(--pfy-reveal-controller-height, #{$revealControllerHeight}) - 1em) / 2);
      padding-bottom: calc((var(--pfy-reveal-controller-height, #{$revealControllerHeight}) - 2em) / 2);
    }
    input:focus-visible + label {
      @include _focus;
    }
    &.pfy-reveal-frame {
      border: 1px solid #ddd;

      + .pfy-reveal-container > .pfy-reveal-container-inner {
        padding: 1em;
        border: 1px solid #ddd;
        border-top: none;
      }

      &.pfy-target-revealed {
        border-bottom: none;
      }
    }
  } // .pfy-reveal-controller-wrapper



  // === reveal-container =============================
  .pfy-reveal-container {
    overflow: hidden;
    position: relative;
    margin-bottom: 0.7em;
    background: var(--pfy-reveal-container-bg);
    z-index: 0;


    .pfy-reveal-container-inner {
      border: var(--pfy-reveal-container-border);
      padding: var(--pfy-reveal-container-padding);
      border-top: none;
      margin-top: -10000px;
      opacity: 0;
    }

    &.pfy-elem-revealed {
      .pfy-reveal-container-inner {
        opacity: 1;
      }
    }
    .pfy-reveal-container-inner {
      padding-top: 1em;
    }
    &.pfy-elem-revealing .pfy-reveal-container-inner {
      opacity: 1;
      transition: margin-top 0.3s;
    }
  }
}


